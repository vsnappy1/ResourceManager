# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# The jobs to run as part of this workflow
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

     # Environment variables
    env:
      # Set the JAVA_HOME environment variable
      JAVA_HOME_17_X64: /usr/lib/jvm/adoptopenjdk-17-hotspot-amd64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          # Install gpg secret key
          cat <(echo -e "${{ secrets.GPG_SECRET_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Build
        run: ./gradlew build

      - name: Generate Artifacts
        run: ./gradlew generateArtifacts

      - name: Generate CheckSum
        run: ./gradlew generateCheckSum

      - name: Sign Artifacts
        run: ./gradlew signArtifacts
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create bundle
        run: ./gradlew createBundle
        
      - id: publish-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME_TOKEN }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD_TOKEN }}
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} \
            clean deploy
